services:

  backend:
    container_name: backend
    image: parkmineum/mumuk-backend:v1.0.0
    build:
      context: ./
      dockerfile: Dockerfile
    env_file:
      - .env
    expose:
      - "8080"
    environment:
      - SPRING_PROFILES_ACTIVE=prod
      - POSTGRESQL_USER=${PROD_DB_USERNAME}
      - POSTGRESQL_PASSWORD=${PROD_DB_PASSWORD}
      - POSTGRESQL_URL=jdbc:postgresql://${PROD_DB_ENDPOINT}:5432/${PROD_DB_NAME}
    networks:
      - mumuk_network
    depends_on:
      redis:
        condition: service_healthy
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost" ]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s

  postgres-exporter:
    image: prometheuscommunity/postgres-exporter
    container_name: postgres-exporter
    env_file:
      - .env
    environment:
      DATA_SOURCE_NAME: "postgresql://${PROD_DB_USERNAME}:${PROD_DB_PASSWORD}@${PROD_DB_ENDPOINT}:${PROD_DB_PORT}/${PROD_DB_NAME}"
    ports:
      - "9187:9187"
    networks:
      - mumuk_network

  redis:
    image: redis:7.2
    container_name: redis
    ports:
      - "6379:6379"
    networks:
      - mumuk_network
    healthcheck:
      test: ["CMD","redis-cli","ping"]
      interval: 5s
      timeout: 3s
      retries: 5
      start_period: 30s

  redis-exporter:
    image: oliver006/redis_exporter:v1.61.0
    container_name: redis-exporter
    ports:
      - "9121:9121"
    networks:
      - mumuk_network
    environment:
      - REDIS_ADDR=redis:6379

  nginx:
    container_name: nginx
    image: nginx:1.29.0
    ports:
      - "90:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - /etc/letsencrypt:/etc/letsencrypt:ro
    environment:
      - TZ=Asia/Seoul
    networks:
      - mumuk_network
    restart: always
    healthcheck:
      test: [ "CMD", "curl", "-kf", "http://localhost" ]
      interval: 30s
      timeout: 10s
      retries: 3

  nginx-exporter:
    image: nginx/nginx-prometheus-exporter:1.1.0
    container_name: nginx-exporter
    command:
      - "--nginx.scrape-uri=http://nginx:80/stub_status"
    ports:
      - "9113:9113"
    depends_on:
      - nginx
    networks:
      - mumuk_network


  prometheus:
    image: prom/prometheus:v3.5.0
    container_name: prometheus
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    ports:
      - "9090:9090"
    networks:
      - mumuk_network

  loki:
    image: grafana/loki:2.9.2
    container_name: loki
    ports:
      - "3100:3100"
    command: -config.file=/etc/loki/local-config.yaml
    volumes:
      - ./loki:/loki
    networks:
      - mumuk_network

  promtail:
    image: grafana/promtail:2.9.2
    container_name: promtail
    ports:
      - "9080:9080"
    volumes:
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./promtail/promtail-config.yaml:/etc/promtail/promtail-config.yaml:ro
    command: -config.file=/etc/promtail/promtail-config.yaml
    networks:
      - mumuk_network
    depends_on:
      - loki

  grafana:
    image: grafana/grafana:12.1.0
    container_name: grafana
    ports:
      - "3000:3000"
    networks:
      - mumuk_network
    volumes:
      - grafana-storage:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_ADMIN_PASSWORD}
      - GF_SERVER_DOMAIN=grafana.mumuk.site
      - GF_SERVER_ROOT_URL=https://grafana.mumuk.site/
volumes:
  grafana-storage:

networks:
  mumuk_network:
    driver: bridge